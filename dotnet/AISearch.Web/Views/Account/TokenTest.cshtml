@{
    ViewData["Title"] = "Bearer Token Test";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <div class="card material-card">
                <div class="card-header bg-primary text-white">
                    <h3 class="mb-0">
                        <i class="material-icons me-2" style="vertical-align: middle;">security</i>
                        Bearer Token Test & API Testing Interface
                    </h3>
                </div>
                <div class="card-body">
                    <div class="alert alert-info">
                        <h5><i class="material-icons me-2" style="vertical-align: middle;">info</i>About This Page</h5>
                        <p class="mb-0">This page displays your current Bearer access token and provides tools to test API endpoints. The token is automatically acquired from Azure AD and used for API authentication.</p>
                    </div>

                    <!-- Loading State -->
                    <div id="loading" class="text-center py-4">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Loading token information...</span>
                        </div>
                        <p class="mt-2">Loading token information...</p>
                    </div>

                    <!-- Token Information Section -->
                    <div id="tokenInfo" style="display: none;">
                        <!-- Authentication Status -->
                        <div class="row mb-4">
                            <div class="col-md-6">
                                <div class="card">
                                    <div class="card-header bg-success text-white">
                                        <h5 class="mb-0">Authentication Status</h5>
                                    </div>
                                    <div class="card-body">
                                        <div id="authStatus"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="card">
                                    <div class="card-header bg-info text-white">
                                        <h5 class="mb-0">User Information</h5>
                                    </div>
                                    <div class="card-body">
                                        <div id="userInfo"></div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Bearer Token Section -->
                        <div class="card mb-4">
                            <div class="card-header bg-warning text-dark">
                                <h5 class="mb-0">Bearer Access Token</h5>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-8">
                                        <label for="bearerToken" class="form-label">Full Bearer Token:</label>
                                        <div class="input-group">
                                            <input type="text" id="bearerToken" class="form-control font-monospace" readonly>
                                            <button class="btn btn-outline-secondary" type="button" onclick="copyToken()">
                                                <i class="material-icons" style="font-size: 16px;">content_copy</i> Copy
                                            </button>
                                        </div>
                                        <div class="form-text">Use this token in the Authorization header: <code>Authorization: Bearer {token}</code></div>
                                    </div>
                                    <div class="col-md-4">
                                        <div id="tokenStats"></div>
                                    </div>
                                </div>

                                <!-- JWT Token Structure -->
                                <div id="jwtStructure" class="mt-3"></div>
                            </div>
                        </div>

                        <!-- API Testing Section -->
                        <div class="card mb-4">
                            <div class="card-header bg-primary text-white">
                                <h5 class="mb-0">API Testing Interface</h5>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <!-- Anonymous Endpoints -->
                                    <div class="col-md-6 mb-3">
                                        <h6 class="text-success">? Anonymous Endpoints (No Token Required)</h6>
                                        <div class="list-group">
                                            <button type="button" class="list-group-item list-group-item-action" onclick="testEndpoint('https://localhost:7002/api/documents/health')">
                                                <i class="material-icons me-2" style="font-size: 16px;">health_and_safety</i>
                                                Documents Health Check
                                            </button>
                                            <button type="button" class="list-group-item list-group-item-action" onclick="testEndpoint('https://localhost:7002/api/chat/health')">
                                                <i class="material-icons me-2" style="font-size: 16px;">health_and_safety</i>
                                                Chat Health Check
                                            </button>
                                        </div>
                                    </div>

                                    <!-- Authenticated Endpoints via Web App -->
                                    <div class="col-md-6 mb-3">
                                        <h6 class="text-primary">?? Authenticated Endpoints (Via Web App)</h6>
                                        <div class="list-group">
                                            <button type="button" class="list-group-item list-group-item-action" onclick="testEndpoint('/Chat/TestApiConnection')">
                                                <i class="material-icons me-2" style="font-size: 16px;">api</i>
                                                Test Chat API Connection
                                            </button>
                                            <button type="button" class="list-group-item list-group-item-action" onclick="testEndpoint('/Chat/test-documents')">
                                                <i class="material-icons me-2" style="font-size: 16px;">description</i>
                                                Test Documents API
                                            </button>
                                        </div>
                                    </div>
                                </div>

                                <!-- Custom API Test -->
                                <div class="row mt-3">
                                    <div class="col-12">
                                        <h6>Custom API Test</h6>
                                        <div class="input-group">
                                            <input type="text" id="customEndpoint" class="form-control" placeholder="Enter API endpoint (e.g., /api/documents/test)" value="/api/documents/test">
                                            <button class="btn btn-outline-primary" type="button" onclick="testCustomEndpoint()">
                                                <i class="material-icons me-1" style="font-size: 16px;">send</i>
                                                Test Endpoint
                                            </button>
                                        </div>
                                        <div class="form-text">Note: Direct API calls will only work for anonymous endpoints when accessed via browser</div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Test Results Section -->
                        <div class="card mb-4">
                            <div class="card-header bg-secondary text-white">
                                <h5 class="mb-0">Test Results</h5>
                            </div>
                            <div class="card-body">
                                <div id="testResults">
                                    <p class="text-muted">No tests run yet. Click on an endpoint above to test it.</p>
                                </div>
                            </div>
                        </div>

                        <!-- JWT Payload Details -->
                        <div class="card mb-4">
                            <div class="card-header">
                                <h5 class="mb-0">JWT Token Payload</h5>
                            </div>
                            <div class="card-body">
                                <div id="jwtPayload"></div>
                            </div>
                        </div>

                        <!-- Claims Information -->
                        <div class="card">
                            <div class="card-header">
                                <h5 class="mb-0">User Claims</h5>
                            </div>
                            <div class="card-body">
                                <div id="userClaims"></div>
                            </div>
                        </div>
                    </div>

                    <!-- Error State -->
                    <div id="errorState" style="display: none;">
                        <div class="alert alert-danger">
                            <h5><i class="material-icons me-2" style="vertical-align: middle;">error</i>Error Loading Token Information</h5>
                            <p id="errorMessage"></p>
                            <button type="button" class="btn btn-outline-danger" onclick="loadTokenInfo()">
                                <i class="material-icons me-1" style="font-size: 16px;">refresh</i>
                                Retry
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    let currentTokenData = null;

    // Load token information when page loads
    document.addEventListener('DOMContentLoaded', function() {
        console.log('TokenTest page loaded, starting token info load...');
        loadTokenInfo();
    });

    async function loadTokenInfo() {
        try {
            showLoading();
            console.log('Fetching token info from /Account/token-info...');
            
            const response = await fetch('/Account/token-info');
            console.log('Response status:', response.status, response.statusText);
            
            if (!response.ok) {
                throw new Error(`HTTP ${response.status}: ${response.statusText}`);
            }
            
            const responseText = await response.text();
            console.log('Response text:', responseText.substring(0, 200) + '...');
            
            currentTokenData = JSON.parse(responseText);
            console.log('Token data parsed successfully:', !!currentTokenData);
            
            displayTokenInfo(currentTokenData);
            hideLoading();
        } catch (error) {
            console.error('Error loading token info:', error);
            showError(error.message);
        }
    }

    function displayTokenInfo(data) {
        console.log('Displaying token info...');
        
        // Authentication Status
        document.getElementById('authStatus').innerHTML = `
            <div class="d-flex justify-content-between align-items-center mb-2">
                <span>Status:</span>
                <span class="badge ${data.isAuthenticated ? 'bg-success' : 'bg-danger'}">
                    ${data.isAuthenticated ? 'Authenticated' : 'Not Authenticated'}
                </span>
            </div>
            <div class="d-flex justify-content-between align-items-center">
                <span>Has Token:</span>
                <span class="badge ${data.hasToken ? 'bg-success' : 'bg-danger'}">
                    ${data.hasToken ? 'Yes' : 'No'}
                </span>
            </div>
        `;

        // User Information
        document.getElementById('userInfo').innerHTML = `
            <div class="mb-2"><strong>User ID:</strong> ${data.userId || 'N/A'}</div>
            <div class="mb-2"><strong>Email:</strong> ${data.userEmail || 'N/A'}</div>
            <div><strong>Name:</strong> ${data.userName || 'N/A'}</div>
        `;

        // Bearer Token
        if (data.hasToken) {
            document.getElementById('bearerToken').value = data.fullToken;
            
            document.getElementById('tokenStats').innerHTML = `
                <div class="mb-2"><strong>Length:</strong> ${data.tokenLength} chars</div>
                <div class="mb-2"><strong>Valid JWT:</strong> ${data.tokenStructure?.isValidJWT ? 'Yes' : 'No'}</div>
                <div><strong>Acquired:</strong> ${new Date(data.tokenAcquiredAt).toLocaleTimeString()}</div>
            `;

            // JWT Structure
            if (data.tokenStructure?.isValidJWT) {
                document.getElementById('jwtStructure').innerHTML = `
                    <div class="mt-3">
                        <h6>JWT Structure:</h6>
                        <div class="row">
                            <div class="col-md-4">
                                <small class="text-muted">Header:</small>
                                <div class="border p-2 font-monospace small bg-light">${data.tokenStructure.header}</div>
                            </div>
                            <div class="col-md-4">
                                <small class="text-muted">Payload:</small>
                                <div class="border p-2 font-monospace small bg-light">${data.tokenStructure.payload}</div>
                            </div>
                            <div class="col-md-4">
                                <small class="text-muted">Signature:</small>
                                <div class="border p-2 font-monospace small bg-light">${data.tokenStructure.signature.substring(0, 20)}...</div>
                            </div>
                        </div>
                    </div>
                `;
            }
        } else {
            document.getElementById('bearerToken').value = 'No token available';
            document.getElementById('tokenStats').innerHTML = '<div class="alert alert-warning mb-0">No access token available</div>';
        }

        // JWT Payload
        if (data.decodedPayload) {
            document.getElementById('jwtPayload').innerHTML = `
                <pre class="bg-light p-3 border rounded">${JSON.stringify(data.decodedPayload, null, 2)}</pre>
            `;
        } else {
            document.getElementById('jwtPayload').innerHTML = '<p class="text-muted">No payload data available</p>';
        }

        // User Claims
        if (data.claims && data.claims.length > 0) {
            const claimsHtml = data.claims.map(claim => `
                <div class="d-flex justify-content-between border-bottom py-2">
                    <strong>${claim.type}:</strong>
                    <span class="text-end ms-2">${claim.value}</span>
                </div>
            `).join('');
            document.getElementById('userClaims').innerHTML = claimsHtml;
        } else {
            document.getElementById('userClaims').innerHTML = '<p class="text-muted">No claims available</p>';
        }
    }

    async function testEndpoint(endpoint) {
        const startTime = Date.now();
        let resultHtml = `
            <div class="border-start border-primary border-4 ps-3 mb-3">
                <h6 class="text-primary">Testing: ${endpoint}</h6>
                <div class="spinner-border spinner-border-sm me-2" role="status"></div>
                <span>Testing...</span>
            </div>
        `;
        
        document.getElementById('testResults').innerHTML = resultHtml + document.getElementById('testResults').innerHTML;

        try {
            const response = await fetch(endpoint);
            const duration = Date.now() - startTime;
            const contentType = response.headers.get('content-type');
            let responseData;

            if (contentType && contentType.includes('application/json')) {
                responseData = await response.json();
            } else {
                responseData = await response.text();
            }

            const statusClass = response.ok ? 'success' : 'danger';
            const statusIcon = response.ok ? 'check_circle' : 'error';

            resultHtml = `
                <div class="border-start border-${statusClass} border-4 ps-3 mb-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <h6 class="text-${statusClass} mb-1">
                            <i class="material-icons me-1" style="font-size: 16px;">${statusIcon}</i>
                            ${endpoint}
                        </h6>
                        <small class="text-muted">${duration}ms</small>
                    </div>
                    <div class="mb-2">
                        <span class="badge bg-${statusClass}">HTTP ${response.status}</span>
                        <span class="badge bg-secondary ms-1">${contentType || 'unknown'}</span>
                    </div>
                    <details>
                        <summary class="btn btn-sm btn-outline-${statusClass}">View Response</summary>
                        <pre class="mt-2 bg-light p-2 border rounded small">${typeof responseData === 'string' ? responseData : JSON.stringify(responseData, null, 2)}</pre>
                    </details>
                </div>
            `;
        } catch (error) {
            const duration = Date.now() - startTime;
            resultHtml = `
                <div class="border-start border-danger border-4 ps-3 mb-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <h6 class="text-danger mb-1">
                            <i class="material-icons me-1" style="font-size: 16px;">error</i>
                            ${endpoint}
                        </h6>
                        <small class="text-muted">${duration}ms</small>
                    </div>
                    <div class="alert alert-danger mb-0">
                        <strong>Error:</strong> ${error.message}
                    </div>
                </div>
            `;
        }

        // Update the results
        const currentResults = document.getElementById('testResults').innerHTML;
        document.getElementById('testResults').innerHTML = currentResults.replace(
            /Testing: [^<]+[\s\S]*?<\/div>/,
            resultHtml.trim()
        );
    }

    function testCustomEndpoint() {
        const endpoint = document.getElementById('customEndpoint').value.trim();
        if (endpoint) {
            testEndpoint(endpoint);
        }
    }

    function copyToken() {
        const tokenInput = document.getElementById('bearerToken');
        tokenInput.select();
        tokenInput.setSelectionRange(0, 99999); // For mobile devices
        
        try {
            document.execCommand('copy');
            
            // Show success feedback
            const button = event.target.closest('button');
            const originalText = button.innerHTML;
            button.innerHTML = '<i class="material-icons" style="font-size: 16px;">check</i> Copied!';
            button.classList.remove('btn-outline-secondary');
            button.classList.add('btn-success');
            
            setTimeout(() => {
                button.innerHTML = originalText;
                button.classList.remove('btn-success');
                button.classList.add('btn-outline-secondary');
            }, 2000);
        } catch (err) {
            console.error('Failed to copy token:', err);
            alert('Failed to copy token to clipboard');
        }
    }

    function showLoading() {
        document.getElementById('loading').style.display = 'block';
        document.getElementById('tokenInfo').style.display = 'none';
        document.getElementById('errorState').style.display = 'none';
    }

    function hideLoading() {
        document.getElementById('loading').style.display = 'none';
        document.getElementById('tokenInfo').style.display = 'block';
        document.getElementById('errorState').style.display = 'none';
    }

    function showError(message) {
        document.getElementById('loading').style.display = 'none';
        document.getElementById('tokenInfo').style.display = 'none';
        document.getElementById('errorState').style.display = 'block';
        document.getElementById('errorMessage').textContent = message;
    }
</script>